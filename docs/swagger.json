{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/actor-add": {
            "post": {
                "description": "Adds a new actor with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Adds a new actor",
                "parameters": [
                    {
                        "description": "Actor to add",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added the actor",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating actor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actor-delete/{id}": {
            "delete": {
                "description": "Deletes the actor with the specified ID, including removing all associated movies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Deletes an actor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the actor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid actor ID or URL format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Actor not found or could not be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actor-edit/{id}": {
            "put": {
                "description": "Edits an actor with the specified ID based on the given update fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Edits an existing actor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the actor",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or actor ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Actor not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to save actor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actor-list": {
            "get": {
                "description": "Retrieves a list of all actors, including their associated movies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Lists all actors",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all actors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Actor"
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving actors",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "handles login requests by checking username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "LoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns login token",
                        "schema": {
                            "$ref": "#/definitions/routes.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or Unauthorized"
                    },
                    "401": {
                        "description": "Invalid request or Unauthorized"
                    }
                }
            }
        },
        "/movie-add": {
            "post": {
                "description": "Adds a new movie with the given details including title, description, release date, and rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Adds a new movie",
                "parameters": [
                    {
                        "description": "Movie to add",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added the movie",
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating movie",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movie-delete/{id}": {
            "delete": {
                "description": "Deletes the movie with the specified ID, including removing all associations with actors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Deletes a movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the movie",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid movie ID or URL format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Movie not found or could not be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movie-edit/{id}": {
            "put": {
                "description": "Edits a movie with the specified ID based on the given update fields such as title, description, release date, rating, and associated actors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Edits an existing movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the movie",
                        "schema": {
                            "$ref": "#/definitions/models.Movie"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or movie ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error saving movie",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movie-list": {
            "get": {
                "description": "Retrieves a list of all movies, including their titles, descriptions, release dates, ratings, and associated actors with sorting.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Lists all movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort by [title|rating|releasedate], prepend '-' for descending order (default: '-rating')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all movies",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Movie"
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving movie list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Actor": {
            "type": "object",
            "properties": {
                "dateOfBirth": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Movie": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Actor"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "releaseDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "routes.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "routes.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}